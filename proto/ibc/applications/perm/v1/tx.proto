syntax = "proto3";
package ibc.applications.perm.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/initia-labs/initia/x/ibc/perm/types";

// Msg defines the ibc/perm Msg service
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateChannelRelayer defines a rpc handler method for MsgUpdateChannelRelayer.
  rpc UpdateChannelRelayer(MsgUpdateChannelRelayer) returns (MsgUpdateChannelRelayerResponse);
}

// MsgUpdateChannelRelayer defines msg to set permissioned relyer for
// the specific ibc channel.
message MsgUpdateChannelRelayer {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "perm/MsgUpdateChannelRelayer";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // authority is the address that controls the module
  // (defaults to x/gov unless overwritten).
  string authority = 1 [
    (gogoproto.moretags) = "yaml:\"authority\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
  string channel = 2 [(gogoproto.moretags) = "yaml:\"channel\""];
  string relayer = 3 [(gogoproto.moretags) = "yaml:\"relayer\""];
}

// MsgUpdateChannelRelayerResponse defines the Msg/UpdateChannelRelayer response type.
message MsgUpdateChannelRelayerResponse {
  // sequence number of the sft transfer packet sent
  uint64 sequence = 1;
}
